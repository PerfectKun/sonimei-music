apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

/**
 * 一些key和签名配置，如果报错在项目根目录新建key.properties文件，内容如下
 *
 * storePassword=xxx
 * keyPassword=xxx
 * keyAlias=key0
 * storeFile=keystore路径
 * buglyAppId=bugly应用Id
 *
 * 都没有引号
 */
def keyPropertiesFile = rootProject.file("key.properties")
def keyProperties = new Properties()
keyProperties.load(new FileInputStream(keyPropertiesFile))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.dede.sonimei"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 16
        versionName "0.7.2"
        flavorDimensions versionName

        // 在BuildConfig类中生成BUGLY_APPID常量
        buildConfigField "String", "BUGLY_APPID", "\"${keyProperties['buglyAppId']}\""
    }

    // 使用@Parcelize在class继承的时候会有无法复写writeToParcel方法的问题
//    androidExtensions {
//        experimental = true
//    }

    signingConfigs {
        release {
            keyAlias keyProperties['keyAlias']
            keyPassword keyProperties['keyPassword']
            storeFile file(keyProperties['storeFile'])
            storePassword keyProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            zipAlignEnabled true
            debuggable false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {}
        preview {}
        coolapk {}
        wandoujia {}
        xiaomi {
            applicationId "com.dede.sonimei_mi"
        }
        huawei {}
    }

    productFlavors.all { flavor ->
        buildConfigField "String", "CHANNEL", "\"${flavor.name}\""
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def buildType = variant.buildType.name
            def version = "${variant.versionName}(${variant.versionCode})"
            def flavor = variant.productFlavors[0].name
            outputFileName = "sonimei_${flavor}_${buildType}_${version}.apk"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:palette-v7:$supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // rxjava + retrofit
    implementation 'io.reactivex.rxjava2:rxjava:2.2.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'

    // rxlifecycle
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-kotlin:2.2.1'

    // rxpermission
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'

    // kotlin anko
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-support-v4-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-sqlite:$anko_version"

    // gson
    implementation 'com.google.code.gson:gson:2.8.2'

    // glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    kapt 'com.github.bumptech.glide:compiler:4.7.1'

    // leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    // base adapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    // lrcview // implementation 'me.wcy:lrcview:2.0.1'
    implementation project(':lrcview')
    // bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'
    // scrollbar
    implementation 'com.github.turing-tech:MaterialScrollBar:13.3.0'// 新版本迁移到了AndroidX
    // round image
    implementation 'com.makeramen:roundedimageview:2.3.0'
}
